# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
envlist = 
    py38    

[testenv]
deps =
    pytest
passenv = 
    HUNTLIB_*
    
whitelist_externals = 
    echo
    bash
    sleep 
    rm
    mkdir

commands_pre =
    echo "****** Stopping any previous Splunk container ******"
    bash -c 'docker kill splunk_test ; docker stop splunk_test ; docker rm splunk_test ; true'
    echo "****** Stopping any previous Elastic containers ******"
    bash -c 'docker kill create_elastic_certs; docker stop create_elastic_certs; docker rm create_elastic_certs; true'
    bash -c 'docker kill elastic_test; docker stop elastic_test; docker rm elastic_test; true'
    sleep 10

    echo "****** Creating Elastic TLS Certs ******"
    rm -rf support/certs
    mkdir support/certs
    bash -c 'docker run -it --name create_elastic_certs -e CERTS_DIR=/usr/share/elasticsearch/config/certificates -v `pwd`/support/certs:/certs -v `pwd`/support/certificates:/usr/share/elasticsearch/config/certificates docker.elastic.co/elasticsearch/elasticsearch:7.6.2 bash -c "yum install -y -q -e 0 unzip; ls -la /certs ; ls -la /usr/share/elasticsearch/config/certificates ;if [[ ! -f /certs/bundle.zip ]]; then bin/elasticsearch-certutil cert --silent --pem --in config/certificates/instances.yml -out /certs/bundle.zip; unzip /certs/bundle.zip -d /certs; fi; chown -R 1000:0 /certs"'

    echo "****** Starting Splunk Enterprise via Docker ******"
    bash -c 'docker run -it -d --name splunk_test -e SPLUNK_START_ARGS=--accept-license -e SPLUNK_LICENSE_URI=/tmp/splunk.lic -e SPLUNK_PASSWORD=testpass -p 8000:8000 -p 8089:8089 -v `pwd`/support/Splunk.License:/tmp/splunk.lic -v `pwd`/support/test-data.json:/tmp/test-data.json -v `pwd`/support/test-data-large.json:/tmp/test-data-large.json splunk/splunk:latest'
    echo "****** Starting Elastic via Docker ******"
    bash -c 'docker run -d -it --name elastic_test -e node.name=es01 -e cluster.initial_master_nodes=es01 -e xpack.license.self_generated.type=trial -e xpack.security.enabled=true -e xpack.security.http.ssl.enabled=true -e xpack.security.http.ssl.key=/usr/share/elasticsearch/config/certificates/elastic_test/elastic_test.key -e xpack.security.http.ssl.certificate_authorities=/usr/share/elasticsearch/config/certificates/ca/ca.crt -e xpack.security.http.ssl.certificate=/usr/share/elasticsearch/config/certificates/elastic_test/elastic_test.crt -v `pwd`/support/certs:/usr/share/elasticsearch/config/certificates -p 9200:9200 docker.elastic.co/elasticsearch/elasticsearch:7.6.2'
    echo "****** Sleeping to allow containers to start ******"
    sleep 60

    echo "****** Loading Splunk data ******"
#    bash -c 'docker exec -it splunk_test sudo -u splunk cp /tmp/test-data.json /opt/splunk/var/spool/splunk'
    bash -c 'docker exec -it splunk_test sudo /opt/splunk/bin/splunk list user -auth admin:testpass'
    bash -c 'docker exec -it splunk_test sudo /opt/splunk/bin/splunk add index bigdata'
    bash -c 'docker exec -it splunk_test sudo /opt/splunk/bin/splunk add oneshot /tmp/test-data.json -index main'
    bash -c 'docker exec -it splunk_test sudo /opt/splunk/bin/splunk add oneshot /tmp/test-data-large.json -index bigdata'

    echo "****** Loading Elastic data ******"
    bash -c 'docker exec elastic_test bin/elasticsearch-setup-passwords auto --batch --url https://localhost:9200 | grep "PASSWORD elastic" | cut -d" " -f 4 > /tmp/elastic_pass.txt' 
    bash -c 'echo \{\"password\": \"testpass\"\} | curl -u elastic:`cat /tmp/elastic_pass.txt` --cacert support/certs/ca/ca.crt -H "Content-Type: application/json" -XPOST https://localhost:9200/_security/user/elastic/_password  --data-binary @-'
    bash -c 'curl -u elastic:testpass --cacert support/certs/ca/ca.crt -H "Content-Type: application/json" -XPOST "https://localhost:9200/_bulk" --data-binary @support/test-data-elastic.json > /dev/null'
    bash -c 'curl -u elastic:testpass --cacert support/certs/ca/ca.crt -H "Content-Type: application/json" -XPOST "https://localhost:9200/_bulk" --data-binary @support/test-data-large-elastic.json > /dev/null'

    echo "****** Sleeping again to allow time for indexing ******"
    sleep 20

commands = 
    python setup.py test

commands_post = 
    echo "****** Stopping any previous Splunk container ******"
    bash -c 'docker kill splunk_test ; docker stop splunk_test ; docker rm splunk_test ; true'
    echo "****** Stopping any previous Elastic containers ******"
    bash -c 'docker kill create_elastic_certs; docker stop create_elastic_certs; docker rm create_elastic_certs; true'
    bash -c 'docker kill elastic_test; docker stop elastic_test; docker rm elastic_test; true'
    echo "****** Cleaning up artifacts ******"
    rm -rf support/certs
    rm -f /tmp/elastic_pass.txt

